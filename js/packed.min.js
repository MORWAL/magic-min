/* Source file: js/bootstrap.js */

!function ($){"use strict"; $(function (){$.support.transition = (function (){var transitionEnd = (function (){var el = document.createElement('bootstrap'), transEndEventNames = { 'WebkitTransition' : 'webkitTransitionEnd','MozTransition': 'transitionend','OTransition': 'oTransitionEnd otransitionend','transition' : 'transitionend'}, namefor (name in transEndEventNames){if (el.style[name] !== undefined){return transEndEventNames[name]}}}())return transitionEnd && {end: transitionEnd}})()})}(window.jQuery);!function ($){"use strict";var dismiss = '[data-dismiss="alert"]', Alert = function (el){$(el).on('click', dismiss, this.close)}Alert.prototype.close = function (e){var $this = $(this), selector = $this.attr('data-target'), $parentif (!selector){selector = $this.attr('href')selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '')}$parent = $(selector)e && e.preventDefault()$parent.length || ($parent = $this.hasClass('alert')? $this : $this.parent())$parent.trigger(e = $.Event('close'))if (e.isDefaultPrevented())return$parent.removeClass('in')function removeElement(){$parent.trigger('closed').remove()}$.support.transition && $parent.hasClass('fade')?$parent.on($.support.transition.end, removeElement):removeElement()} var old = $.fn.alert$.fn.alert = function (option){return this.each(function (){var $this = $(this), data = $this.data('alert')if (!data)$this.data('alert', (data = new Alert(this)))if (typeof option == 'string')data[option].call($this)})}$.fn.alert.Constructor = Alert $.fn.alert.noConflict = function (){$.fn.alert = oldreturn this} $(document).on('click.alert.data-api', dismiss, Alert.prototype.close)}(window.jQuery);!function ($){"use strict";var Button = function (element, options){this.$element = $(element)this.options = $.extend({}, $.fn.button.defaults, options)}Button.prototype.setState = function (state){var d = 'disabled', $el = this.$element, data = $el.data(), val = $el.is('input')? 'val' : 'html'state = state + 'Text'data.resetText || $el.data('resetText', $el[val]())$el[val](data[state] || this.options[state])setTimeout(function (){state == 'loadingText' ?$el.addClass(d).attr(d, d):$el.removeClass(d).removeAttr(d)}, 0)}Button.prototype.toggle = function (){var $parent = this.$element.closest('[data-toggle="buttons-radio"]')$parent && $parent.find('.active').removeClass('active')this.$element.toggleClass('active')} var old = $.fn.button$.fn.button = function (option){return this.each(function (){var $this = $(this), data = $this.data('button'), options = typeof option == 'object' && optionif (!data)$this.data('button', (data = new Button(this, options)))if (option == 'toggle')data.toggle()else if (option)data.setState(option)})}$.fn.button.defaults = {loadingText: 'loading...'}$.fn.button.Constructor = Button $.fn.button.noConflict = function (){$.fn.button = oldreturn this} $(document).on('click.button.data-api', '[data-toggle^=button]', function (e){var $btn = $(e.target)if (!$btn.hasClass('btn'))$btn = $btn.closest('.btn')$btn.button('toggle')})}(window.jQuery);!function ($){"use strict";var Carousel = function (element, options){this.$element = $(element)this.$indicators = this.$element.find('.carousel-indicators')this.options = optionsthis.options.pause == 'hover' && this.$element.on('mouseenter', $.proxy(this.pause, this)).on('mouseleave', $.proxy(this.cycle, this))}Carousel.prototype = {cycle: function (e){if (!e)this.paused = falseif (this.interval)clearInterval(this.interval);this.options.interval&& !this.paused&& (this.interval = setInterval($.proxy(this.next, this), this.options.interval))return this}, getActiveIndex: function (){this.$active = this.$element.find('.item.active')this.$items = this.$active.parent().children()return this.$items.index(this.$active)}, to: function (pos){var activeIndex = this.getActiveIndex(), that = thisif (pos > (this.$items.length - 1)|| pos < 0)returnif (this.sliding){return this.$element.one('slid', function (){that.to(pos)})}if (activeIndex == pos){return this.pause().cycle()}return this.slide(pos > activeIndex ? 'next' : 'prev', $(this.$items[pos]))}, pause: function (e){if (!e)this.paused = trueif (this.$element.find('.next, .prev').length && $.support.transition.end){this.$element.trigger($.support.transition.end)this.cycle(true)}clearInterval(this.interval)this.interval = nullreturn this}, next: function (){if (this.sliding)returnreturn this.slide('next')}, prev: function (){if (this.sliding)returnreturn this.slide('prev')}, slide: function (type, next){var $active = this.$element.find('.item.active'), $next = next || $active[type](), isCycling = this.interval, direction = type == 'next' ? 'left' : 'right', fallback= type == 'next' ? 'first' : 'last', that = this, ethis.sliding = trueisCycling && this.pause()$next = $next.length ? $next : this.$element.find('.item')[fallback]()e = $.Event('slide', {relatedTarget: $next[0], direction: direction})if ($next.hasClass('active'))returnif (this.$indicators.length){this.$indicators.find('.active').removeClass('active')this.$element.one('slid', function (){var $nextIndicator = $(that.$indicators.children()[that.getActiveIndex()])$nextIndicator && $nextIndicator.addClass('active')})}if ($.support.transition && this.$element.hasClass('slide')){this.$element.trigger(e)if (e.isDefaultPrevented())return$next.addClass(type)$next[0].offsetWidth $active.addClass(direction)$next.addClass(direction)this.$element.one($.support.transition.end, function (){$next.removeClass([type, direction].join(' ')).addClass('active')$active.removeClass(['active', direction].join(' '))that.sliding = falsesetTimeout(function (){ that.$element.trigger('slid')}, 0)})} else {this.$element.trigger(e)if (e.isDefaultPrevented())return$active.removeClass('active')$next.addClass('active')this.sliding = falsethis.$element.trigger('slid')}isCycling && this.cycle()return this}} var old = $.fn.carousel$.fn.carousel = function (option){return this.each(function (){var $this = $(this), data = $this.data('carousel'), options = $.extend({}, $.fn.carousel.defaults, typeof option == 'object' && option), action = typeof option == 'string' ? option : options.slideif (!data)$this.data('carousel', (data = new Carousel(this, options)))if (typeof option == 'number')data.to(option)else if (action)data[action]()else if (options.interval)data.pause().cycle()})}$.fn.carousel.defaults = {interval: 5000, pause: 'hover'}$.fn.carousel.Constructor = Carousel $.fn.carousel.noConflict = function (){$.fn.carousel = oldreturn this} $(document).on('click.carousel.data-api', '[data-slide], [data-slide-to]', function (e){var $this = $(this), href, $target = $($this.attr('data-target')|| (href = $this.attr('href'))&& href.replace(/.*(?=#[^\s]+$)/, '')), options = $.extend({}, $target.data(), $this.data()), slideIndex$target.carousel(options)if (slideIndex = $this.attr('data-slide-to')){$target.data('carousel').pause().to(slideIndex).cycle()}e.preventDefault()})}(window.jQuery);!function ($){"use strict";var Collapse = function (element, options){this.$element = $(element)this.options = $.extend({}, $.fn.collapse.defaults, options)if (this.options.parent){this.$parent = $(this.options.parent)}this.options.toggle && this.toggle()}Collapse.prototype = {constructor: Collapse, dimension: function (){var hasWidth = this.$element.hasClass('width')return hasWidth ? 'width' : 'height'}, show: function (){var dimension, scroll, actives, hasDataif (this.transitioning || this.$element.hasClass('in'))returndimension = this.dimension()scroll = $.camelCase(['scroll', dimension].join('-'))actives = this.$parent && this.$parent.find('> .accordion-group > .in')if (actives && actives.length){hasData = actives.data('collapse')if (hasData && hasData.transitioning)returnactives.collapse('hide')hasData || actives.data('collapse', null)}this.$element[dimension](0)this.transition('addClass', $.Event('show'), 'shown')$.support.transition && this.$element[dimension](this.$element[0][scroll])}, hide: function (){var dimensionif (this.transitioning || !this.$element.hasClass('in'))returndimension = this.dimension()this.reset(this.$element[dimension]())this.transition('removeClass', $.Event('hide'), 'hidden')this.$element[dimension](0)}, reset: function (size){var dimension = this.dimension()this.$element.removeClass('collapse')[dimension](size || 'auto')[0].offsetWidththis.$element[size !== null ? 'addClass' : 'removeClass']('collapse')return this}, transition: function (method, startEvent, completeEvent){var that = this, complete = function (){if (startEvent.type == 'show')that.reset()that.transitioning = 0that.$element.trigger(completeEvent)}this.$element.trigger(startEvent)if (startEvent.isDefaultPrevented())returnthis.transitioning = 1this.$element[method]('in')$.support.transition && this.$element.hasClass('collapse')?this.$element.one($.support.transition.end, complete):complete()}, toggle: function (){this[this.$element.hasClass('in')? 'hide' : 'show']()}} var old = $.fn.collapse$.fn.collapse = function (option){return this.each(function (){var $this = $(this), data = $this.data('collapse'), options = $.extend({}, $.fn.collapse.defaults, $this.data(), typeof option == 'object' && option)if (!data)$this.data('collapse', (data = new Collapse(this, options)))if (typeof option == 'string')data[option]()})}$.fn.collapse.defaults = {toggle: true}$.fn.collapse.Constructor = Collapse $.fn.collapse.noConflict = function (){$.fn.collapse = oldreturn this} $(document).on('click.collapse.data-api', '[data-toggle=collapse]', function (e){var $this = $(this), href, target = $this.attr('data-target')|| e.preventDefault()|| (href = $this.attr('href'))&& href.replace(/.*(?=#[^\s]+$)/, ''), option = $(target).data('collapse')? 'toggle' : $this.data()$this[$(target).hasClass('in')? 'addClass' : 'removeClass']('collapsed')$(target).collapse(option)})}(window.jQuery);!function ($){"use strict";var toggle = '[data-toggle=dropdown]', Dropdown = function (element){var $el = $(element).on('click.dropdown.data-api', this.toggle)$('html').on('click.dropdown.data-api', function (){$el.parent().removeClass('open')})}Dropdown.prototype = {constructor: Dropdown, toggle: function (e){var $this = $(this), $parent, isActiveif ($this.is('.disabled, :disabled'))return$parent = getParent($this)isActive = $parent.hasClass('open')clearMenus()if (!isActive){if ('ontouchstart' in document.documentElement){$('<div class="dropdown-backdrop"/>').insertBefore($(this)).on('click', clearMenus)}$parent.toggleClass('open')}$this.focus()return false}, keydown: function (e){var $this, $items, $active, $parent, isActive, indexif (!/(38|40|27)/.test(e.keyCode))return$this = $(this)e.preventDefault()e.stopPropagation()if ($this.is('.disabled, :disabled'))return$parent = getParent($this)isActive = $parent.hasClass('open')if (!isActive || (isActive && e.keyCode == 27)){if (e.which == 27)$parent.find(toggle).focus()return $this.click()}$items = $('[role=menu] li:not(.divider):visible a', $parent)if (!$items.length)returnindex = $items.index($items.filter(':focus'))if (e.keyCode == 38 && index > 0)index--if (e.keyCode == 40 && index < $items.length - 1)index++if (!~index)index = 0$items.eq(index).focus()}}function clearMenus(){$('.dropdown-backdrop').remove()$(toggle).each(function (){getParent($(this)).removeClass('open')})}function getParent($this){var selector = $this.attr('data-target'), $parentif (!selector){selector = $this.attr('href')selector = selector && /#/.test(selector)&& selector.replace(/.*(?=#[^\s]*$)/, '')}$parent = selector && $(selector)if (!$parent || !$parent.length)$parent = $this.parent()return $parent}var old = $.fn.dropdown$.fn.dropdown = function (option){return this.each(function (){var $this = $(this), data = $this.data('dropdown')if (!data)$this.data('dropdown', (data = new Dropdown(this)))if (typeof option == 'string')data[option].call($this)})}$.fn.dropdown.Constructor = Dropdown $.fn.dropdown.noConflict = function (){$.fn.dropdown = oldreturn this}$(document).on('click.dropdown.data-api', clearMenus).on('click.dropdown.data-api', '.dropdown form', function (e){ e.stopPropagation()}).on('click.dropdown.data-api', toggle, Dropdown.prototype.toggle).on('keydown.dropdown.data-api', toggle + ', [role=menu]' , Dropdown.prototype.keydown)}(window.jQuery);!function ($){"use strict";var Modal = function (element, options){this.options = optionsthis.$element = $(element).delegate('[data-dismiss="modal"]', 'click.dismiss.modal', $.proxy(this.hide, this))this.options.remote && this.$element.find('.modal-body').load(this.options.remote)}Modal.prototype = {constructor: Modal, toggle: function (){return this[!this.isShown ? 'show' : 'hide']()}, show: function (){var that = this, e = $.Event('show')this.$element.trigger(e)if (this.isShown || e.isDefaultPrevented())returnthis.isShown = truethis.escape()this.backdrop(function (){var transition = $.support.transition && that.$element.hasClass('fade')if (!that.$element.parent().length){that.$element.appendTo(document.body)}that.$element.show()if (transition){that.$element[0].offsetWidth }that.$element.addClass('in').attr('aria-hidden', false)that.enforceFocus()transition ?that.$element.one($.support.transition.end, function (){ that.$element.focus().trigger('shown')}):that.$element.focus().trigger('shown')})}, hide: function (e){e && e.preventDefault()var that = thise = $.Event('hide')this.$element.trigger(e)if (!this.isShown || e.isDefaultPrevented())returnthis.isShown = falsethis.escape()$(document).off('focusin.modal')this.$element.removeClass('in').attr('aria-hidden', true)$.support.transition && this.$element.hasClass('fade')?this.hideWithTransition():this.hideModal()}, enforceFocus: function (){var that = this$(document).on('focusin.modal', function (e){if (that.$element[0] !== e.target && !that.$element.has(e.target).length){that.$element.focus()}})}, escape: function (){var that = thisif (this.isShown && this.options.keyboard){this.$element.on('keyup.dismiss.modal', function ( e){e.which == 27 && that.hide()})} else if (!this.isShown){this.$element.off('keyup.dismiss.modal')}}, hideWithTransition: function (){var that = this, timeout = setTimeout(function (){that.$element.off($.support.transition.end)that.hideModal()}, 500)this.$element.one($.support.transition.end, function (){clearTimeout(timeout)that.hideModal()})}, hideModal: function (){var that = thisthis.$element.hide()this.backdrop(function (){that.removeBackdrop()that.$element.trigger('hidden')})}, removeBackdrop: function (){this.$backdrop && this.$backdrop.remove()this.$backdrop = null}, backdrop: function (callback){var that = this, animate = this.$element.hasClass('fade')? 'fade' : ''if (this.isShown && this.options.backdrop){var doAnimate = $.support.transition && animatethis.$backdrop = $('<div class="modal-backdrop ' + animate + '" />').appendTo(document.body)this.$backdrop.click(this.options.backdrop == 'static' ?$.proxy(this.$element[0].focus, this.$element[0]): $.proxy(this.hide, this))if (doAnimate)this.$backdrop[0].offsetWidth this.$backdrop.addClass('in')if (!callback)returndoAnimate ?this.$backdrop.one($.support.transition.end, callback):callback()} else if (!this.isShown && this.$backdrop){this.$backdrop.removeClass('in')$.support.transition && this.$element.hasClass('fade')?this.$backdrop.one($.support.transition.end, callback):callback()} else if (callback){callback()}}} var old = $.fn.modal$.fn.modal = function (option){return this.each(function (){var $this = $(this), data = $this.data('modal'), options = $.extend({}, $.fn.modal.defaults, $this.data(), typeof option == 'object' && option)if (!data)$this.data('modal', (data = new Modal(this, options)))if (typeof option == 'string')data[option]()else if (options.show)data.show()})}$.fn.modal.defaults = {backdrop: true, keyboard: true, show: true}$.fn.modal.Constructor = Modal $.fn.modal.noConflict = function (){$.fn.modal = oldreturn this} $(document).on('click.modal.data-api', '[data-toggle="modal"]', function (e){var $this = $(this), href = $this.attr('href'), $target = $($this.attr('data-target')|| (href && href.replace(/.*(?=#[^\s]+$)/, ''))), option = $target.data('modal')? 'toggle' : $.extend({ remote:!/#/.test(href)&& href }, $target.data(), $this.data())e.preventDefault()$target.modal(option).one('hide', function (){$this.focus()})})}(window.jQuery);!function ($){"use strict";var Tooltip = function (element, options){this.init('tooltip', element, options)}Tooltip.prototype = {constructor: Tooltip, init: function (type, element, options){var eventIn, eventOut, triggers, trigger, ithis.type = typethis.$element = $(element)this.options = this.getOptions(options)this.enabled = truetriggers = this.options.trigger.split(' ')for (i = triggers.length; i--;){trigger = triggers[i]if (trigger == 'click'){this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))} else if (trigger != 'manual'){eventIn = trigger == 'hover' ? 'mouseenter' : 'focus'eventOut = trigger == 'hover' ? 'mouseleave' : 'blur'this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this))this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))}}this.options.selector ?(this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })):this.fixTitle()}, getOptions: function (options){options = $.extend({}, $.fn[this.type].defaults, this.$element.data(), options)if (options.delay && typeof options.delay == 'number'){options.delay = {show: options.delay, hide: options.delay}}return options}, enter: function (e){var defaults = $.fn[this.type].defaults, options = {}, selfthis._options && $.each(this._options, function (key, value){if (defaults[key] != value)options[key] = value}, this)self = $(e.currentTarget)[this.type](options).data(this.type)if (!self.options.delay || !self.options.delay.show)return self.show()clearTimeout(this.timeout)self.hoverState = 'in'this.timeout = setTimeout(function(){if (self.hoverState == 'in')self.show()}, self.options.delay.show)}, leave: function (e){var self = $(e.currentTarget)[this.type](this._options).data(this.type)if (this.timeout)clearTimeout(this.timeout)if (!self.options.delay || !self.options.delay.hide)return self.hide()self.hoverState = 'out'this.timeout = setTimeout(function(){if (self.hoverState == 'out')self.hide()}, self.options.delay.hide)}, show: function (){var $tip, pos, actualWidth, actualHeight, placement, tp, e = $.Event('show')if (this.hasContent()&& this.enabled){this.$element.trigger(e)if (e.isDefaultPrevented())return$tip = this.tip()this.setContent()if (this.options.animation){$tip.addClass('fade')}placement = typeof this.options.placement == 'function' ?this.options.placement.call(this, $tip[0], this.$element[0]):this.options.placement$tip.detach().css({ top: 0, left: 0, display: 'block' })this.options.container ? $tip.appendTo(this.options.container): $tip.insertAfter(this.$element)pos = this.getPosition()actualWidth = $tip[0].offsetWidthactualHeight = $tip[0].offsetHeightswitch (placement){case 'bottom':tp = {top: pos.top + pos.height, left: pos.left + pos.width / 2 - actualWidth / 2}breakcase 'top':tp = {top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2}breakcase 'left':tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth}breakcase 'right':tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width}break}this.applyPlacement(tp, placement)this.$element.trigger('shown')}}, applyPlacement: function(offset, placement){var $tip = this.tip(), width = $tip[0].offsetWidth, height = $tip[0].offsetHeight, actualWidth, actualHeight, delta, replace$tip.offset(offset).addClass(placement).addClass('in')actualWidth = $tip[0].offsetWidthactualHeight = $tip[0].offsetHeightif (placement == 'top' && actualHeight != height){offset.top = offset.top + height - actualHeightreplace = true}if (placement == 'bottom' || placement == 'top'){delta = 0if (offset.left < 0){delta = offset.left * -2offset.left = 0$tip.offset(offset)actualWidth = $tip[0].offsetWidthactualHeight = $tip[0].offsetHeight}this.replaceArrow(delta - width + actualWidth, actualWidth, 'left')} else {this.replaceArrow(actualHeight - height, actualHeight, 'top')}if (replace)$tip.offset(offset)}, replaceArrow: function(delta, dimension, position){this.arrow().css(position, delta ? (50 * (1 - delta / dimension)+ "%"): '')}, setContent: function (){var $tip = this.tip(), title = this.getTitle()$tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)$tip.removeClass('fade in top bottom left right')}, hide: function (){var that = this, $tip = this.tip(), e = $.Event('hide')this.$element.trigger(e)if (e.isDefaultPrevented())return$tip.removeClass('in')function removeWithAnimation(){var timeout = setTimeout(function (){$tip.off($.support.transition.end).detach()}, 500)$tip.one($.support.transition.end, function (){clearTimeout(timeout)$tip.detach()})}$.support.transition && this.$tip.hasClass('fade')?removeWithAnimation():$tip.detach()this.$element.trigger('hidden')return this}, fixTitle: function (){var $e = this.$elementif ($e.attr('title')|| typeof($e.attr('data-original-title'))!= 'string'){$e.attr('data-original-title', $e.attr('title')|| '').attr('title', '')}}, hasContent: function (){return this.getTitle()}, getPosition: function (){var el = this.$element[0]return $.extend({}, (typeof el.getBoundingClientRect == 'function')? el.getBoundingClientRect(): {width: el.offsetWidth, height: el.offsetHeight}, this.$element.offset())}, getTitle: function (){var title, $e = this.$element, o = this.optionstitle = $e.attr('data-original-title')|| (typeof o.title == 'function' ? o.title.call($e[0]):o.title)return title}, tip: function (){return this.$tip = this.$tip || $(this.options.template)}, arrow: function(){return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow")}, validate: function (){if (!this.$element[0].parentNode){this.hide()this.$element = nullthis.options = null}}, enable: function (){this.enabled = true}, disable: function (){this.enabled = false}, toggleEnabled: function (){this.enabled = !this.enabled}, toggle: function (e){var self = e ? $(e.currentTarget)[this.type](this._options).data(this.type): thisself.tip().hasClass('in')? self.hide(): self.show()}, destroy: function (){this.hide().$element.off('.' + this.type).removeData(this.type)}} var old = $.fn.tooltip$.fn.tooltip = function ( option){return this.each(function (){var $this = $(this), data = $this.data('tooltip'), options = typeof option == 'object' && optionif (!data)$this.data('tooltip', (data = new Tooltip(this, options)))if (typeof option == 'string')data[option]()})}$.fn.tooltip.Constructor = Tooltip$.fn.tooltip.defaults = {animation: true, placement: 'top', selector: false, template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', trigger: 'hover focus', title: '', delay: 0, html: false, container: false} $.fn.tooltip.noConflict = function (){$.fn.tooltip = oldreturn this}}(window.jQuery);!function ($){"use strict";var Popover = function (element, options){this.init('popover', element, options)}Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype, {constructor: Popover, setContent: function (){var $tip = this.tip(), title = this.getTitle(), content = this.getContent()$tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)$tip.find('.popover-content')[this.options.html ? 'html' : 'text'](content)$tip.removeClass('fade top bottom left right in')}, hasContent: function (){return this.getTitle()|| this.getContent()}, getContent: function (){var content, $e = this.$element, o = this.optionscontent = (typeof o.content == 'function' ? o.content.call($e[0]):o.content)|| $e.attr('data-content')return content}, tip: function (){if (!this.$tip){this.$tip = $(this.options.template)}return this.$tip}, destroy: function (){this.hide().$element.off('.' + this.type).removeData(this.type)}})var old = $.fn.popover$.fn.popover = function (option){return this.each(function (){var $this = $(this), data = $this.data('popover'), options = typeof option == 'object' && optionif (!data)$this.data('popover', (data = new Popover(this, options)))if (typeof option == 'string')data[option]()})}$.fn.popover.Constructor = Popover$.fn.popover.defaults = $.extend({} , $.fn.tooltip.defaults, {placement: 'right', trigger: 'click', content: '', template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'})$.fn.popover.noConflict = function (){$.fn.popover = oldreturn this}}(window.jQuery);!function ($){"use strict";function ScrollSpy(element, options){var process = $.proxy(this.process, this), $element = $(element).is('body')? $(window): $(element), hrefthis.options = $.extend({}, $.fn.scrollspy.defaults, options)this.$scrollElement = $element.on('scroll.scroll-spy.data-api', process)this.selector = (this.options.target|| ((href = $(element).attr('href'))&& href.replace(/.*(?=#[^\s]+$)/, ''))|| '')+ ' .nav li > a'this.$body = $('body')this.refresh()this.process()}ScrollSpy.prototype = {constructor: ScrollSpy, refresh: function (){var self = this, $targetsthis.offsets = $([])this.targets = $([])$targets = this.$body.find(this.selector).map(function (){var $el = $(this), href = $el.data('target')|| $el.attr('href'), $href = /^#\w/.test(href)&& $(href)return ( $href&& $href.length&& [[ $href.position().top + (!$.isWindow(self.$scrollElement.get(0))&& self.$scrollElement.scrollTop()), href ]])|| null}).sort(function (a, b){ return a[0] - b[0] }).each(function (){self.offsets.push(this[0])self.targets.push(this[1])})}, process: function (){var scrollTop = this.$scrollElement.scrollTop()+ this.options.offset, scrollHeight = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight, maxScroll = scrollHeight - this.$scrollElement.height(), offsets = this.offsets, targets = this.targets, activeTarget = this.activeTarget, iif (scrollTop >= maxScroll){return activeTarget != (i = targets.last()[0])&& this.activate ( i)}for (i = offsets.length; i--;){activeTarget != targets[i]&& scrollTop >= offsets[i]&& (!offsets[i + 1] || scrollTop <= offsets[i + 1])&& this.activate( targets[i])}}, activate: function (target){var active, selectorthis.activeTarget = target$(this.selector).parent('.active').removeClass('active')selector = this.selector+ '[data-target="' + target + '"],'+ this.selector + '[href="' + target + '"]'active = $(selector).parent('li').addClass('active')if (active.parent('.dropdown-menu').length){active = active.closest('li.dropdown').addClass('active')}active.trigger('activate')}} var old = $.fn.scrollspy$.fn.scrollspy = function (option){return this.each(function (){var $this = $(this), data = $this.data('scrollspy'), options = typeof option == 'object' && optionif (!data)$this.data('scrollspy', (data = new ScrollSpy(this, options)))if (typeof option == 'string')data[option]()})}$.fn.scrollspy.Constructor = ScrollSpy$.fn.scrollspy.defaults = {offset: 10} $.fn.scrollspy.noConflict = function (){$.fn.scrollspy = oldreturn this} $(window).on('load', function (){$('[data-spy="scroll"]').each(function (){var $spy = $(this)$spy.scrollspy($spy.data())})})}(window.jQuery);!function ($){"use strict";var Tab = function (element){this.element = $(element)}Tab.prototype = {constructor: Tab, show: function (){var $this = this.element, $ul = $this.closest('ul:not(.dropdown-menu)'), selector = $this.attr('data-target'), previous, $target, eif (!selector){selector = $this.attr('href')selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '')}if ( $this.parent('li').hasClass('active'))returnprevious = $ul.find('.active:last a')[0]e = $.Event('show', {relatedTarget: previous})$this.trigger(e)if (e.isDefaultPrevented())return$target = $(selector)this.activate($this.parent('li'), $ul)this.activate($target, $target.parent(), function (){$this.trigger({type: 'shown', relatedTarget: previous})})}, activate: function ( element, container, callback){var $active = container.find('> .active'), transition = callback&& $.support.transition&& $active.hasClass('fade')function next(){$active.removeClass('active').find('> .dropdown-menu > .active').removeClass('active')element.addClass('active')if (transition){element[0].offsetWidth element.addClass('in')} else {element.removeClass('fade')}if ( element.parent('.dropdown-menu')){element.closest('li.dropdown').addClass('active')}callback && callback()}transition ?$active.one($.support.transition.end, next):next()$active.removeClass('in')}} var old = $.fn.tab$.fn.tab = function ( option){return this.each(function (){var $this = $(this), data = $this.data('tab')if (!data)$this.data('tab', (data = new Tab(this)))if (typeof option == 'string')data[option]()})}$.fn.tab.Constructor = Tab $.fn.tab.noConflict = function (){$.fn.tab = oldreturn this} $(document).on('click.tab.data-api', '[data-toggle="tab"], [data-toggle="pill"]', function (e){e.preventDefault()$(this).tab('show')})}(window.jQuery);!function($){"use strict";var Typeahead = function (element, options){this.$element = $(element)this.options = $.extend({}, $.fn.typeahead.defaults, options)this.matcher = this.options.matcher || this.matcherthis.sorter = this.options.sorter || this.sorterthis.highlighter = this.options.highlighter || this.highlighterthis.updater = this.options.updater || this.updaterthis.source = this.options.sourcethis.$menu = $(this.options.menu)this.shown = falsethis.listen()}Typeahead.prototype = {constructor: Typeahead, select: function (){var val = this.$menu.find('.active').attr('data-value')this.$element.val(this.updater(val)).change()return this.hide()}, updater: function (item){return item}, show: function (){var pos = $.extend({}, this.$element.position(), {height: this.$element[0].offsetHeight})this.$menu.insertAfter(this.$element).css({top: pos.top + pos.height, left: pos.left}).show()this.shown = truereturn this}, hide: function (){this.$menu.hide()this.shown = falsereturn this}, lookup: function (event){var itemsthis.query = this.$element.val()if (!this.query || this.query.length < this.options.minLength){return this.shown ? this.hide(): this}items = $.isFunction(this.source)? this.source(this.query, $.proxy(this.process, this)): this.sourcereturn items ? this.process(items): this}, process: function (items){var that = thisitems = $.grep(items, function (item){return that.matcher(item)})items = this.sorter(items)if (!items.length){return this.shown ? this.hide(): this}return this.render(items.slice(0, this.options.items)).show()}, matcher: function (item){return ~item.toLowerCase().indexOf(this.query.toLowerCase())}, sorter: function (items){var beginswith = [], caseSensitive = [], caseInsensitive = [], itemwhile (item = items.shift()){if (!item.toLowerCase().indexOf(this.query.toLowerCase()))beginswith.push(item)else if (~item.indexOf(this.query))caseSensitive.push(item)else caseInsensitive.push(item)}return beginswith.concat(caseSensitive, caseInsensitive)}, highlighter: function (item){var query = this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&')return item.replace(new RegExp('(' + query + ')', 'ig'), function ($1, match){return '<strong>' + match + '</strong>'})}, render: function (items){var that = thisitems = $(items).map(function (i, item){i = $(that.options.item).attr('data-value', item)i.find('a').html(that.highlighter(item))return i[0]})items.first().addClass('active')this.$menu.html(items)return this}, next: function (event){var active = this.$menu.find('.active').removeClass('active'), next = active.next()if (!next.length){next = $(this.$menu.find('li')[0])}next.addClass('active')}, prev: function (event){var active = this.$menu.find('.active').removeClass('active'), prev = active.prev()if (!prev.length){prev = this.$menu.find('li').last()}prev.addClass('active')}, listen: function (){this.$element.on('focus',$.proxy(this.focus, this)).on('blur', $.proxy(this.blur, this)).on('keypress', $.proxy(this.keypress, this)).on('keyup',$.proxy(this.keyup, this))if (this.eventSupported('keydown')){this.$element.on('keydown', $.proxy(this.keydown, this))}this.$menu.on('click', $.proxy(this.click, this)).on('mouseenter', 'li', $.proxy(this.mouseenter, this)).on('mouseleave', 'li', $.proxy(this.mouseleave, this))}, eventSupported: function(eventName){var isSupported = eventName in this.$elementif (!isSupported){this.$element.setAttribute(eventName, 'return;')isSupported = typeof this.$element[eventName] === 'function'}return isSupported}, move: function (e){if (!this.shown)returnswitch(e.keyCode){case 9: case 13: case 27: e.preventDefault()breakcase 38: e.preventDefault()this.prev()breakcase 40: e.preventDefault()this.next()break}e.stopPropagation()}, keydown: function (e){this.suppressKeyPressRepeat = ~$.inArray(e.keyCode, [40,38,9,13,27])this.move(e)}, keypress: function (e){if (this.suppressKeyPressRepeat)returnthis.move(e)}, keyup: function (e){switch(e.keyCode){case 40: case 38: case 16: case 17: case 18: breakcase 9: case 13: if (!this.shown)returnthis.select()breakcase 27: if (!this.shown)returnthis.hide()breakdefault:this.lookup()}e.stopPropagation()e.preventDefault()}, focus: function (e){this.focused = true}, blur: function (e){this.focused = falseif (!this.mousedover && this.shown)this.hide()}, click: function (e){e.stopPropagation()e.preventDefault()this.select()this.$element.focus()}, mouseenter: function (e){this.mousedover = truethis.$menu.find('.active').removeClass('active')$(e.currentTarget).addClass('active')}, mouseleave: function (e){this.mousedover = falseif (!this.focused && this.shown)this.hide()}}var old = $.fn.typeahead$.fn.typeahead = function (option){return this.each(function (){var $this = $(this), data = $this.data('typeahead'), options = typeof option == 'object' && optionif (!data)$this.data('typeahead', (data = new Typeahead(this, options)))if (typeof option == 'string')data[option]()})}$.fn.typeahead.defaults = {source: [], items: 8, menu: '<ul class="typeahead dropdown-menu"></ul>', item: '<li><a href="#"></a></li>', minLength: 1}$.fn.typeahead.Constructor = Typeahead $.fn.typeahead.noConflict = function (){$.fn.typeahead = oldreturn this} $(document).on('focus.typeahead.data-api', '[data-provide="typeahead"]', function (e){var $this = $(this)if ($this.data('typeahead'))return$this.typeahead($this.data())})}(window.jQuery);!function ($){"use strict";var Affix = function (element, options){this.options = $.extend({}, $.fn.affix.defaults, options)this.$window = $(window).on('scroll.affix.data-api', $.proxy(this.checkPosition, this)).on('click.affix.data-api',$.proxy(function (){ setTimeout($.proxy(this.checkPosition, this), 1)}, this))this.$element = $(element)this.checkPosition()}Affix.prototype.checkPosition = function (){if (!this.$element.is(':visible'))returnvar scrollHeight = $(document).height(), scrollTop = this.$window.scrollTop(), position = this.$element.offset(), offset = this.options.offset, offsetBottom = offset.bottom, offsetTop = offset.top, reset = 'affix affix-top affix-bottom', affixif (typeof offset != 'object')offsetBottom = offsetTop = offsetif (typeof offsetTop == 'function')offsetTop = offset.top()if (typeof offsetBottom == 'function')offsetBottom = offset.bottom()affix = this.unpin != null && (scrollTop + this.unpin <= position.top)?false: offsetBottom != null && (position.top + this.$element.height()>= scrollHeight - offsetBottom)?'bottom' : offsetTop != null && scrollTop <= offsetTop ?'top': falseif (this.affixed === affix)returnthis.affixed = affixthis.unpin = affix == 'bottom' ? position.top - scrollTop : nullthis.$element.removeClass(reset).addClass('affix' + (affix ? '-' + affix : ''))} var old = $.fn.affix$.fn.affix = function (option){return this.each(function (){var $this = $(this), data = $this.data('affix'), options = typeof option == 'object' && optionif (!data)$this.data('affix', (data = new Affix(this, options)))if (typeof option == 'string')data[option]()})}$.fn.affix.Constructor = Affix$.fn.affix.defaults = {offset: 0} $.fn.affix.noConflict = function (){$.fn.affix = oldreturn this} $(window).on('load', function (){$('[data-spy="affix"]').each(function (){var $spy = $(this), data = $spy.data()data.offset = data.offset || {}data.offsetBottom && (data.offset.bottom = data.offsetBottom)data.offsetTop && (data.offset.top = data.offsetTop)$spy.affix(data)})})}(window.jQuery);

/* Source file: js/jquery.form.js */

;(function($){"use strict";var feature = {};feature.fileapi = $("<input type='file'/>").get(0).files !== undefined;feature.formdata = window.FormData !== undefined;$.fn.ajaxSubmit = function(options){if (!this.length){log('ajaxSubmit: skipping submit process - no element selected');return this;}var method, action, url, $form = this;if (typeof options == 'function'){options = { success: options };}method = this.attr('method');action = this.attr('action');url = (typeof action === 'string')? $.trim(action): '';url = url || window.location.href || '';if (url){url = (url.match(/^([^#]+)/)||[])[1];}options = $.extend(true, {url:url,success: $.ajaxSettings.success,type: method || 'GET',iframeSrc: /^https/i.test(window.location.href || '')? 'javascript:false' : 'about:blank'}, options);var veto = {};this.trigger('form-pre-serialize', [this, options, veto]);if (veto.veto){log('ajaxSubmit: submit vetoed via form-pre-serialize trigger');return this;}if (options.beforeSerialize && options.beforeSerialize(this, options)=== false){log('ajaxSubmit: submit aborted via beforeSerialize callback');return this;}var traditional = options.traditional;if ( traditional === undefined){traditional = $.ajaxSettings.traditional;}var elements = [];var qx, a = this.formToArray(options.semantic, elements);if (options.data){options.extraData = options.data;qx = $.param(options.data, traditional);}if (options.beforeSubmit && options.beforeSubmit(a, this, options)=== false){log('ajaxSubmit: submit aborted via beforeSubmit callback');return this;}this.trigger('form-submit-validate', [a, this, options, veto]);if (veto.veto){log('ajaxSubmit: submit vetoed via form-submit-validate trigger');return this;}var q = $.param(a, traditional);if (qx){q = ( q ? (q + '&' + qx): qx);}if (options.type.toUpperCase()== 'GET'){options.url += (options.url.indexOf('?')>= 0 ? '&' : '?')+ q;options.data = null;}else {options.data = q; }var callbacks = [];if (options.resetForm){callbacks.push(function(){ $form.resetForm(); });}if (options.clearForm){callbacks.push(function(){ $form.clearForm(options.includeHidden); });}if (!options.dataType && options.target){var oldSuccess = options.success || function(){};callbacks.push(function(data){var fn = options.replaceTarget ? 'replaceWith' : 'html';$(options.target)[fn](data).each(oldSuccess, arguments);});}else if (options.success){callbacks.push(options.success);}options.success = function(data, status, xhr){ var context = options.context || options;for (var i=0, max=callbacks.length; i < max; i++){callbacks[i].apply(context, [data, status, xhr || $form, $form]);}};var fileInputs = $('input:file:enabled[value]', this); var hasFileInputs = fileInputs.length > 0;var mp = 'multipart/form-data';var multipart = ($form.attr('enctype')== mp || $form.attr('encoding')== mp);var fileAPI = feature.fileapi && feature.formdata;log("fileAPI :" + fileAPI);var shouldUseFrame = (hasFileInputs || multipart)&& !fileAPI;if (options.iframe !== false && (options.iframe || shouldUseFrame)){if (options.closeKeepAlive){$.get(options.closeKeepAlive, function(){fileUploadIframe(a);});}else {fileUploadIframe(a);}}else if ((hasFileInputs || multipart)&& fileAPI){fileUploadXhr(a);}else {$.ajax(options);}for (var k=0; k < elements.length; k++)elements[k] = null;this.trigger('form-submit-notify', [this, options]);return this; function fileUploadXhr(a){var formdata = new FormData();for (var i=0; i < a.length; i++){formdata.append(a[i].name, a[i].value);}if (options.extraData){for (var p in options.extraData)if (options.extraData.hasOwnProperty(p))formdata.append(p, options.extraData[p]);}options.data = null;var s = $.extend(true, {}, $.ajaxSettings, options, {contentType: false,processData: false,cache: false,type: 'POST'});if (options.uploadProgress){s.xhr = function(){var xhr = jQuery.ajaxSettings.xhr();if (xhr.upload){xhr.upload.onprogress = function(event){var percent = 0;var position = event.loaded || event.position; var total = event.total;if (event.lengthComputable){percent = Math.ceil(position / total * 100);}options.uploadProgress(event, position, total, percent);};}return xhr;};}s.data = null;var beforeSend = s.beforeSend;s.beforeSend = function(xhr, o){o.data = formdata;if(beforeSend)beforeSend.call(o, xhr, options);};$.ajax(s);}function fileUploadIframe(a){var form = $form[0], el, i, s, g, id, $io, io, xhr, sub, n, timedOut, timeoutHandle;var useProp = !!$.fn.prop;if ($(':input[name=submit],:input[id=submit]', form).length){alert('Error: Form elements must not have name or id of "submit".');return;}if (a){for (i=0; i < elements.length; i++){el = $(elements[i]);if ( useProp)el.prop('disabled', false);elseel.removeAttr('disabled');}}s = $.extend(true, {}, $.ajaxSettings, options);s.context = s.context || s;id = 'jqFormIO' + (new Date().getTime());if (s.iframeTarget){$io = $(s.iframeTarget);n = $io.attr('name');if (!n)$io.attr('name', id);elseid = n;}else {$io = $('<iframe name="' + id + '" src="'+ s.iframeSrc +'" />');$io.css({ position: 'absolute', top: '-1000px', left: '-1000px' });}io = $io[0];xhr = { aborted: 0,responseText: null,responseXML: null,status: 0,statusText: 'n/a',getAllResponseHeaders: function(){},getResponseHeader: function(){},setRequestHeader: function(){},abort: function(status){var e = (status === 'timeout' ? 'timeout' : 'aborted');log('aborting upload... ' + e);this.aborted = 1;$io.attr('src', s.iframeSrc); xhr.error = e;if (s.error)s.error.call(s.context, xhr, e, status);if (g)$.event.trigger("ajaxError", [xhr, s, e]);if (s.complete)s.complete.call(s.context, xhr, e);}};g = s.global;if (g && 0 === $.active++){$.event.trigger("ajaxStart");}if (g){$.event.trigger("ajaxSend", [xhr, s]);}if (s.beforeSend && s.beforeSend.call(s.context, xhr, s)=== false){if (s.global){$.active--;}return;}if (xhr.aborted){return;}sub = form.clk;if (sub){n = sub.name;if (n && !sub.disabled){s.extraData = s.extraData || {};s.extraData[n] = sub.value;if (sub.type == "image"){s.extraData[n+'.x'] = form.clk_x;s.extraData[n+'.y'] = form.clk_y;}}}var CLIENT_TIMEOUT_ABORT = 1;var SERVER_ABORT = 2;function getDoc(frame){var doc = frame.contentWindow ? frame.contentWindow.document : frame.contentDocument ? frame.contentDocument : frame.document;return doc;}var csrf_token = $('meta[name=csrf-token]').attr('content');var csrf_param = $('meta[name=csrf-param]').attr('content');if (csrf_param && csrf_token){s.extraData = s.extraData || {};s.extraData[csrf_param] = csrf_token;}function doSubmit(){var t = $form.attr('target'), a = $form.attr('action');form.setAttribute('target',id);if (!method){form.setAttribute('method', 'POST');}if (a != s.url){form.setAttribute('action', s.url);}if (! s.skipEncodingOverride && (!method || /post/i.test(method))){$form.attr({encoding: 'multipart/form-data',enctype:'multipart/form-data'});}if (s.timeout){timeoutHandle = setTimeout(function(){ timedOut = true; cb(CLIENT_TIMEOUT_ABORT); }, s.timeout);}function checkState(){try {var state = getDoc(io).readyState;log('state = ' + state);if (state && state.toLowerCase()== 'uninitialized')setTimeout(checkState,50);}catch(e){log('Server abort: ' , e, ' (', e.name, ')');cb(SERVER_ABORT);if (timeoutHandle)clearTimeout(timeoutHandle);timeoutHandle = undefined;}}var extraInputs = [];try {if (s.extraData){for (var n in s.extraData){if (s.extraData.hasOwnProperty(n)){extraInputs.push($('<input type="hidden" name="'+n+'">').attr('value',s.extraData[n]).appendTo(form)[0]);}}}if (!s.iframeTarget){$io.appendTo('body');if (io.attachEvent)io.attachEvent('onload', cb);elseio.addEventListener('load', cb, false);}setTimeout(checkState,15);form.submit();}finally {form.setAttribute('action',a);if(t){form.setAttribute('target', t);} else {$form.removeAttr('target');}$(extraInputs).remove();}}if (s.forceSync){doSubmit();}else {setTimeout(doSubmit, 10); }var data, doc, domCheckCount = 50, callbackProcessed;function cb(e){if (xhr.aborted || callbackProcessed){return;}try {doc = getDoc(io);}catch(ex){log('cannot access response document: ', ex);e = SERVER_ABORT;}if (e === CLIENT_TIMEOUT_ABORT && xhr){xhr.abort('timeout');return;}else if (e == SERVER_ABORT && xhr){xhr.abort('server abort');return;}if (!doc || doc.location.href == s.iframeSrc){if (!timedOut)return;}if (io.detachEvent)io.detachEvent('onload', cb);elseio.removeEventListener('load', cb, false);var status = 'success', errMsg;try {if (timedOut){throw 'timeout';}var isXml = s.dataType == 'xml' || doc.XMLDocument || $.isXMLDoc(doc);log('isXml='+isXml);if (!isXml && window.opera && (doc.body === null || !doc.body.innerHTML)){if (--domCheckCount){log('requeing onLoad callback, DOM not available');setTimeout(cb, 250);return;}}var docRoot = doc.body ? doc.body : doc.documentElement;xhr.responseText = docRoot ? docRoot.innerHTML : null;xhr.responseXML = doc.XMLDocument ? doc.XMLDocument : doc;if (isXml)s.dataType = 'xml';xhr.getResponseHeader = function(header){var headers = {'content-type': s.dataType};return headers[header];};if (docRoot){xhr.status = Number( docRoot.getAttribute('status'))|| xhr.status;xhr.statusText = docRoot.getAttribute('statusText')|| xhr.statusText;}var dt = (s.dataType || '').toLowerCase();var scr = /(json|script|text)/.test(dt);if (scr || s.textarea){var ta = doc.getElementsByTagName('textarea')[0];if (ta){xhr.responseText = ta.value;xhr.status = Number( ta.getAttribute('status'))|| xhr.status;xhr.statusText = ta.getAttribute('statusText')|| xhr.statusText;}else if (scr){var pre = doc.getElementsByTagName('pre')[0];var b = doc.getElementsByTagName('body')[0];if (pre){xhr.responseText = pre.textContent ? pre.textContent : pre.innerText;}else if (b){xhr.responseText = b.textContent ? b.textContent : b.innerText;}}}else if (dt == 'xml' && !xhr.responseXML && xhr.responseText){xhr.responseXML = toXml(xhr.responseText);}try {data = httpData(xhr, dt, s);}catch (e){status = 'parsererror';xhr.error = errMsg = (e || status);}}catch (e){log('error caught: ',e);status = 'error';xhr.error = errMsg = (e || status);}if (xhr.aborted){log('upload aborted');status = null;}if (xhr.status){ status = (xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)? 'success' : 'error';}if (status === 'success'){if (s.success)s.success.call(s.context, data, 'success', xhr);if (g)$.event.trigger("ajaxSuccess", [xhr, s]);}else if (status){if (errMsg === undefined)errMsg = xhr.statusText;if (s.error)s.error.call(s.context, xhr, status, errMsg);if (g)$.event.trigger("ajaxError", [xhr, s, errMsg]);}if (g)$.event.trigger("ajaxComplete", [xhr, s]);if (g && ! --$.active){$.event.trigger("ajaxStop");}if (s.complete)s.complete.call(s.context, xhr, status);callbackProcessed = true;if (s.timeout)clearTimeout(timeoutHandle);setTimeout(function(){if (!s.iframeTarget)$io.remove();xhr.responseXML = null;}, 100);}var toXml = $.parseXML || function(s, doc){ if (window.ActiveXObject){doc = new ActiveXObject('Microsoft.XMLDOM');doc.async = 'false';doc.loadXML(s);}else {doc = (new DOMParser()).parseFromString(s, 'text/xml');}return (doc && doc.documentElement && doc.documentElement.nodeName != 'parsererror')? doc : null;};var parseJSON = $.parseJSON || function(s){return window['eval']('(' + s + ')');};var httpData = function( xhr, type, s){ var ct = xhr.getResponseHeader('content-type')|| '',xml = type === 'xml' || !type && ct.indexOf('xml')>= 0,data = xml ? xhr.responseXML : xhr.responseText;if (xml && data.documentElement.nodeName === 'parsererror'){if ($.error)$.error('parsererror');}if (s && s.dataFilter){data = s.dataFilter(data, type);}if (typeof data === 'string'){if (type === 'json' || !type && ct.indexOf('json')>= 0){data = parseJSON(data);} else if (type === "script" || !type && ct.indexOf("javascript")>= 0){$.globalEval(data);}}return data;};}};$.fn.ajaxForm = function(options){options = options || {};options.delegation = options.delegation && $.isFunction($.fn.on);if (!options.delegation && this.length === 0){var o = { s: this.selector, c: this.context };if (!$.isReady && o.s){log('DOM not ready, queuing ajaxForm');$(function(){$(o.s,o.c).ajaxForm(options);});return this;}log('terminating; zero elements found by selector' + ($.isReady ? '' : ' (DOM not ready)'));return this;}if ( options.delegation){$(document).off('submit.form-plugin', this.selector, doAjaxSubmit).off('click.form-plugin', this.selector, captureSubmittingElement).on('submit.form-plugin', this.selector, options, doAjaxSubmit).on('click.form-plugin', this.selector, options, captureSubmittingElement);return this;}return this.ajaxFormUnbind().bind('submit.form-plugin', options, doAjaxSubmit).bind('click.form-plugin', options, captureSubmittingElement);};function doAjaxSubmit(e){var options = e.data;if (!e.isDefaultPrevented()){ e.preventDefault();$(this).ajaxSubmit(options);}}function captureSubmittingElement(e){var target = e.target;var $el = $(target);if (!($el.is(":submit,input:image"))){var t = $el.closest(':submit');if (t.length === 0){return;}target = t[0];}var form = this;form.clk = target;if (target.type == 'image'){if (e.offsetX !== undefined){form.clk_x = e.offsetX;form.clk_y = e.offsetY;} else if (typeof $.fn.offset == 'function'){var offset = $el.offset();form.clk_x = e.pageX - offset.left;form.clk_y = e.pageY - offset.top;} else {form.clk_x = e.pageX - target.offsetLeft;form.clk_y = e.pageY - target.offsetTop;}}setTimeout(function(){ form.clk = form.clk_x = form.clk_y = null; }, 100);}$.fn.ajaxFormUnbind = function(){return this.unbind('submit.form-plugin click.form-plugin');};$.fn.formToArray = function(semantic, elements){var a = [];if (this.length === 0){return a;}var form = this[0];var els = semantic ? form.getElementsByTagName('*'): form.elements;if (!els){return a;}var i,j,n,v,el,max,jmax;for(i=0, max=els.length; i < max; i++){el = els[i];n = el.name;if (!n){continue;}if (semantic && form.clk && el.type == "image"){if(!el.disabled && form.clk == el){a.push({name: n, value: $(el).val(), type: el.type });a.push({name: n+'.x', value: form.clk_x}, {name: n+'.y', value: form.clk_y});}continue;}v = $.fieldValue(el, true);if (v && v.constructor == Array){if (elements)elements.push(el);for(j=0, jmax=v.length; j < jmax; j++){a.push({name: n, value: v[j]});}}else if (feature.fileapi && el.type == 'file' && !el.disabled){if (elements)elements.push(el);var files = el.files;if (files.length){for (j=0; j < files.length; j++){a.push({name: n, value: files[j], type: el.type});}}else {a.push({ name: n, value: '', type: el.type });}}else if (v !== null && typeof v != 'undefined'){if (elements)elements.push(el);a.push({name: n, value: v, type: el.type, required: el.required});}}if (!semantic && form.clk){var $input = $(form.clk), input = $input[0];n = input.name;if (n && !input.disabled && input.type == 'image'){a.push({name: n, value: $input.val()});a.push({name: n+'.x', value: form.clk_x}, {name: n+'.y', value: form.clk_y});}}return a;};$.fn.formSerialize = function(semantic){return $.param(this.formToArray(semantic));};$.fn.fieldSerialize = function(successful){var a = [];this.each(function(){var n = this.name;if (!n){return;}var v = $.fieldValue(this, successful);if (v && v.constructor == Array){for (var i=0,max=v.length; i < max; i++){a.push({name: n, value: v[i]});}}else if (v !== null && typeof v != 'undefined'){a.push({name: this.name, value: v});}});return $.param(a);};$.fn.fieldValue = function(successful){for (var val=[], i=0, max=this.length; i < max; i++){var el = this[i];var v = $.fieldValue(el, successful);if (v === null || typeof v == 'undefined' || (v.constructor == Array && !v.length)){continue;}if (v.constructor == Array)$.merge(val, v);elseval.push(v);}return val;};$.fieldValue = function(el, successful){var n = el.name, t = el.type, tag = el.tagName.toLowerCase();if (successful === undefined){successful = true;}if (successful && (!n || el.disabled || t == 'reset' || t == 'button' ||(t == 'checkbox' || t == 'radio')&& !el.checked ||(t == 'submit' || t == 'image')&& el.form && el.form.clk != el ||tag == 'select' && el.selectedIndex == -1)){return null;}if (tag == 'select'){var index = el.selectedIndex;if (index < 0){return null;}var a = [], ops = el.options;var one = (t == 'select-one');var max = (one ? index+1 : ops.length);for(var i=(one ? index : 0); i < max; i++){var op = ops[i];if (op.selected){var v = op.value;if (!v){ v = (op.attributes && op.attributes['value'] && !(op.attributes['value'].specified))? op.text : op.value;}if (one){return v;}a.push(v);}}return a;}return $(el).val();};$.fn.clearForm = function(includeHidden){return this.each(function(){$('input,select,textarea', this).clearFields(includeHidden);});};$.fn.clearFields = $.fn.clearInputs = function(includeHidden){var re = /^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week)$/i; return this.each(function(){var t = this.type, tag = this.tagName.toLowerCase();if (re.test(t)|| tag == 'textarea'){this.value = '';}else if (t == 'checkbox' || t == 'radio'){this.checked = false;}else if (tag == 'select'){this.selectedIndex = -1;}else if (includeHidden){if ( (includeHidden === true && /hidden/.test(t))|| (typeof includeHidden == 'string' && $(this).is(includeHidden)))this.value = '';}});};$.fn.resetForm = function(){return this.each(function(){if (typeof this.reset == 'function' || (typeof this.reset == 'object' && !this.reset.nodeType)){this.reset();}});};$.fn.enable = function(b){if (b === undefined){b = true;}return this.each(function(){this.disabled = !b;});};$.fn.selected = function(select){if (select === undefined){select = true;}return this.each(function(){var t = this.type;if (t == 'checkbox' || t == 'radio'){this.checked = select;}else if (this.tagName.toLowerCase()== 'option'){var $sel = $(this).parent('select');if (select && $sel[0] && $sel[0].type == 'select-one'){$sel.find('option').selected(false);}this.selected = select;}});};$.fn.ajaxSubmit.debug = false;function log(){if (!$.fn.ajaxSubmit.debug)return;var msg = '[jquery.form] ' + Array.prototype.join.call(arguments,'');if (window.console && window.console.log){window.console.log(msg);}else if (window.opera && window.opera.postError){window.opera.postError(msg);}}})(jQuery);

/* Source file: js/jquery.validate.js */

(function($){$.extend($.fn, {validate: function( options){if (!this.length){options && options.debug && window.console && console.warn( "nothing selected, can't validate, returning nothing");return;}var validator = $.data(this[0], 'validator');if ( validator){return validator;}validator = new $.validator( options, this[0]);$.data(this[0], 'validator', validator); if ( validator.settings.onsubmit){this.find("input, button").filter(".cancel").click(function(){validator.cancelSubmit = true;});if (validator.settings.submitHandler){this.find("input, button").filter(":submit").click(function(){validator.submitButton = this;});}this.submit( function( event){if ( validator.settings.debug)event.preventDefault();function handle(){if ( validator.settings.submitHandler){if (validator.submitButton){var hidden = $("<input type='hidden'/>").attr("name", validator.submitButton.name).val(validator.submitButton.value).appendTo(validator.currentForm);}validator.settings.submitHandler.call( validator, validator.currentForm);if (validator.submitButton){hidden.remove();}return false;}return true;}if ( validator.cancelSubmit){validator.cancelSubmit = false;return handle();}if ( validator.form()){if ( validator.pendingRequest){validator.formSubmitted = true;return false;}return handle();} else {validator.focusInvalid();return false;}});}return validator;},valid: function(){if ( $(this[0]).is('form')){return this.validate().form();} else {var valid = true;var validator = $(this[0].form).validate();this.each(function(){valid &= validator.element(this);});return valid;}},removeAttrs: function(attributes){var result = {},$element = this;$.each(attributes.split(/\s/), function(index, value){result[value] = $element.attr(value);$element.removeAttr(value);});return result;},rules: function(command, argument){var element = this[0];if (command){var settings = $.data(element.form, 'validator').settings;var staticRules = settings.rules;var existingRules = $.validator.staticRules(element);switch(command){case "add":$.extend(existingRules, $.validator.normalizeRule(argument));staticRules[element.name] = existingRules;if (argument.messages)settings.messages[element.name] = $.extend( settings.messages[element.name], argument.messages);break;case "remove":if (!argument){delete staticRules[element.name];return existingRules;}var filtered = {};$.each(argument.split(/\s/), function(index, method){filtered[method] = existingRules[method];delete existingRules[method];});return filtered;}}var data = $.validator.normalizeRules($.extend({},$.validator.metadataRules(element),$.validator.classRules(element),$.validator.attributeRules(element),$.validator.staticRules(element)), element);if (data.required){var param = data.required;delete data.required;data = $.extend({required: param}, data);}return data;}});$.extend($.expr[":"], {blank: function(a){return !$.trim(a.value);},filled: function(a){return !!$.trim(a.value);},unchecked: function(a){return !a.checked;}});$.validator = function( options, form){this.settings = $.extend( {}, $.validator.defaults, options);this.currentForm = form;this.init();};$.validator.format = function(source, params){if ( arguments.length == 1)return function(){var args = $.makeArray(arguments);args.unshift(source);return $.validator.format.apply( this, args);};if ( arguments.length > 2 && params.constructor != Array){params = $.makeArray(arguments).slice(1);}if ( params.constructor != Array){params = [ params ];}$.each(params, function(i, n){source = source.replace(new RegExp("\\{" + i + "\\}", "g"), n);});return source;};$.extend($.validator, {defaults: {messages: {},groups: {},rules: {},errorClass: "error",validClass: "valid",errorElement: "label",focusInvalid: true,errorContainer: $( []),errorLabelContainer: $( []),onsubmit: true,ignore: [],ignoreTitle: false,onfocusin: function(element){this.lastActive = element;if ( this.settings.focusCleanup && !this.blockFocusCleanup){this.settings.unhighlight && this.settings.unhighlight.call( this, element, this.settings.errorClass, this.settings.validClass);this.errorsFor(element).hide();}},onfocusout: function(element){if ( !this.checkable(element)&& (element.name in this.submitted || !this.optional(element))){this.element(element);}},onkeyup: function(element){if ( element.name in this.submitted || element == this.lastElement){this.element(element);}},onclick: function(element){if ( element.name in this.submitted)this.element(element);},highlight: function( element, errorClass, validClass){$(element).addClass(errorClass).removeClass(validClass);},unhighlight: function( element, errorClass, validClass){$(element).removeClass(errorClass).addClass(validClass);}},setDefaults: function(settings){$.extend( $.validator.defaults, settings);},messages: {required: "This field is required.",remote: "Please fix this field.",email: "Please enter a valid email address.",url: "Please enter a valid URL.",date: "Please enter a valid date.",dateISO: "Please enter a valid date (ISO).",dateDE: "Bitte geben Sie ein gültiges Datum ein.",number: "Please enter a valid number.",numberDE: "Bitte geben Sie eine Nummer ein.",digits: "Please enter only digits",creditcard: "Please enter a valid credit card number.",equalTo: "Please enter the same value again.",accept: "Please enter a value with a valid extension.",maxlength: $.validator.format("No more than {0} characters."),minlength: $.validator.format("Please enter at least {0} characters."),rangelength: $.validator.format("Please enter a value between {0} and {1} characters long."),range: $.validator.format("Please enter a value between {0} and {1}."),max: $.validator.format("Please enter a valid year of birth."),min: $.validator.format("Please enter a valid year of birth.")},autoCreateRanges: false,prototype: {init: function(){this.labelContainer = $(this.settings.errorLabelContainer);this.errorContext = this.labelContainer.length && this.labelContainer || $(this.currentForm);this.containers = $(this.settings.errorContainer).add( this.settings.errorLabelContainer);this.submitted = {};this.valueCache = {};this.pendingRequest = 0;this.pending = {};this.invalid = {};this.reset();var groups = (this.groups = {});$.each(this.settings.groups, function(key, value){$.each(value.split(/\s/), function(index, name){groups[name] = key;});});var rules = this.settings.rules;$.each(rules, function(key, value){rules[key] = $.validator.normalizeRule(value);});function delegate(event){var validator = $.data(this[0].form, "validator");validator.settings["on" + event.type] && validator.settings["on" + event.type].call(validator, this[0]);}$(this.currentForm).delegate("focusin focusout keyup", ":text, :password, :file, select, textarea", delegate).delegate("click", ":radio, :checkbox", delegate);if (this.settings.invalidHandler)$(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler);},form: function(){this.checkForm();$.extend(this.submitted, this.errorMap);this.invalid = $.extend({}, this.errorMap);if (!this.valid())$(this.currentForm).triggerHandler("invalid-form", [this]);this.showErrors();return this.valid();},checkForm: function(){this.prepareForm();for ( var i = 0, elements = (this.currentElements = this.elements()); elements[i]; i++){this.check( elements[i]);}return this.valid(); },element: function( element){element = this.clean( element);this.lastElement = element;this.prepareElement( element);this.currentElements = $(element);var result = this.check( element);if ( result){delete this.invalid[element.name];} else {this.invalid[element.name] = true;}if ( !this.numberOfInvalids()){this.toHide = this.toHide.add( this.containers);}this.showErrors();return result;},showErrors: function(errors){if(errors){$.extend( this.errorMap, errors);this.errorList = [];for ( var name in errors){this.errorList.push({message: errors[name],element: this.findByName(name)[0]});}this.successList = $.grep( this.successList, function(element){return !(element.name in errors);});}this.settings.showErrors? this.settings.showErrors.call( this, this.errorMap, this.errorList): this.defaultShowErrors();},resetForm: function(){if ( $.fn.resetForm)$( this.currentForm).resetForm();this.submitted = {};this.prepareForm();this.hideErrors();this.elements().removeClass( this.settings.errorClass);},numberOfInvalids: function(){return this.objectLength(this.invalid);},objectLength: function( obj){var count = 0;for ( var i in obj)count++;return count;},hideErrors: function(){this.addWrapper( this.toHide).hide();},valid: function(){return this.size()== 0;},size: function(){return this.errorList.length;},focusInvalid: function(){if( this.settings.focusInvalid){try {$(this.findLastActive()|| this.errorList.length && this.errorList[0].element || []).filter(":visible").focus();} catch(e){}}},findLastActive: function(){var lastActive = this.lastActive;return lastActive && $.grep(this.errorList, function(n){return n.element.name == lastActive.name;}).length == 1 && lastActive;},elements: function(){var validator = this,rulesCache = {};return $([]).add(this.currentForm.elements).filter(":input").not(":submit, :reset, :image, [disabled]").not( this.settings.ignore).filter(function(){!this.name && validator.settings.debug && window.console && console.error( "%o has no name assigned", this);if ( this.name in rulesCache || !validator.objectLength($(this).rules()))return false;rulesCache[this.name] = true;return true;});},clean: function( selector){return $( selector)[0];},errors: function(){return $( this.settings.errorElement + "." + this.settings.errorClass, this.errorContext);},reset: function(){this.successList = [];this.errorList = [];this.errorMap = {};this.toShow = $([]);this.toHide = $([]);this.formSubmitted = false;this.currentElements = $([]);},prepareForm: function(){this.reset();this.toHide = this.errors().add( this.containers);},prepareElement: function( element){this.reset();this.toHide = this.errorsFor(element);},check: function( element){element = this.clean( element);if (this.checkable(element)){element = this.findByName( element.name)[0];}var rules = $(element).rules();var dependencyMismatch = false;for( method in rules){var rule = { method: method, parameters: rules[method] };try {var result = $.validator.methods[method].call( this, element.value.replace(/\r/g, ""), element, rule.parameters);if ( result == "dependency-mismatch"){dependencyMismatch = true;continue;}dependencyMismatch = false;if ( result == "pending"){this.toHide = this.toHide.not( this.errorsFor(element));return;}if( !result){this.formatAndAdd( element, rule);return false;}} catch(e){this.settings.debug && window.console && console.log("exception occured when checking element " + element.id + ", check the '" + rule.method + "' method");throw e;}}if (dependencyMismatch)return;if ( this.objectLength(rules))this.successList.push(element);return true;},customMetaMessage: function(element, method){if (!$.metadata)return;var meta = this.settings.meta? $(element).metadata()[this.settings.meta]: $(element).metadata();return meta && meta.messages && meta.messages[method];},customMessage: function( name, method){var m = this.settings.messages[name];return m && (m.constructor == String? m: m[method]);},findDefined: function(){for(var i = 0; i < arguments.length; i++){if (arguments[i] !== undefined)return arguments[i];}return undefined;},defaultMessage: function( element, method){return this.findDefined(this.customMessage( element.name, method),this.customMetaMessage( element, method),!this.settings.ignoreTitle && element.title || undefined,$.validator.messages[method],"<strong>Warning: No message defined for " + element.name + "</strong>");},formatAndAdd: function( element, rule){var message = this.defaultMessage( element, rule.method);if ( typeof message == "function")message = message.call(this, rule.parameters, element);this.errorList.push({message: message,element: element});this.errorMap[element.name] = message;this.submitted[element.name] = message;},addWrapper: function(toToggle){if ( this.settings.wrapper)toToggle = toToggle.add( toToggle.parent( this.settings.wrapper));return toToggle;},defaultShowErrors: function(){for ( var i = 0; this.errorList[i]; i++){var error = this.errorList[i];this.settings.highlight && this.settings.highlight.call( this, error.element, this.settings.errorClass, this.settings.validClass);this.showLabel( error.element, error.message);}if( this.errorList.length){this.toShow = this.toShow.add( this.containers);}if (this.settings.success){for ( var i = 0; this.successList[i]; i++){this.showLabel( this.successList[i]);}}if (this.settings.unhighlight){for ( var i = 0, elements = this.validElements(); elements[i]; i++){this.settings.unhighlight.call( this, elements[i], this.settings.errorClass, this.settings.validClass);}}this.toHide = this.toHide.not( this.toShow);this.hideErrors();this.addWrapper( this.toShow).show();},validElements: function(){return this.currentElements.not(this.invalidElements());},invalidElements: function(){return $(this.errorList).map(function(){return this.element;});},showLabel: function(element, message){var label = this.errorsFor( element);if ( label.length){label.removeClass().addClass( this.settings.errorClass);label.attr("generated")&& label.html(message);} else {label = $("<" + this.settings.errorElement + "/>").attr({"for":this.idOrName(element), generated: true}).addClass(this.settings.errorClass).html(message || "");if ( this.settings.wrapper){label = label.hide().show().wrap("<" + this.settings.wrapper + "/>").parent();}if ( !this.labelContainer.append(label).length)this.settings.errorPlacement? this.settings.errorPlacement(label, $(element)): label.insertAfter(element);}if ( !message && this.settings.success){label.text("");typeof this.settings.success == "string"? label.addClass( this.settings.success): this.settings.success( label);}this.toShow = this.toShow.add(label);},errorsFor: function(element){return this.errors().filter("[for='" + this.idOrName(element)+ "']");},idOrName: function(element){return this.groups[element.name] || (this.checkable(element)? element.name : element.id || element.name);},checkable: function( element){return /radio|checkbox/i.test(element.type);},findByName: function( name){var form = this.currentForm;return $(document.getElementsByName(name)).map(function(index, element){return element.form == form && element.name == name && element|| null;});},getLength: function(value, element){switch( element.nodeName.toLowerCase()){case 'select':return $("option:selected", element).length;case 'input':if( this.checkable( element))return this.findByName(element.name).filter(':checked').length;}return value.length;},depend: function(param, element){return this.dependTypes[typeof param]? this.dependTypes[typeof param](param, element): true;},dependTypes: {"boolean": function(param, element){return param;},"string": function(param, element){return !!$(param, element.form).length;},"function": function(param, element){return param(element);}},optional: function(element){return !$.validator.methods.required.call(this, $.trim(element.value), element)&& "dependency-mismatch";},startRequest: function(element){if (!this.pending[element.name]){this.pendingRequest++;this.pending[element.name] = true;}},stopRequest: function(element, valid){this.pendingRequest--;if (this.pendingRequest < 0)this.pendingRequest = 0;delete this.pending[element.name];if ( valid && this.pendingRequest == 0 && this.formSubmitted && this.form()){$(this.currentForm).submit();} else if (!valid && this.pendingRequest == 0 && this.formSubmitted){$(this.currentForm).triggerHandler("invalid-form", [this]);}},previousValue: function(element){return $.data(element, "previousValue")|| $.data(element, "previousValue", previous = {old: null,valid: true,message: this.defaultMessage( element, "remote")});}},classRuleSettings: {required: {required: true},email: {email: true},url: {url: true},date: {date: true},dateISO: {dateISO: true},dateDE: {dateDE: true},number: {number: true},numberDE: {numberDE: true},digits: {digits: true},creditcard: {creditcard: true}},addClassRules: function(className, rules){className.constructor == String ?this.classRuleSettings[className] = rules :$.extend(this.classRuleSettings, className);},classRules: function(element){var rules = {};var classes = $(element).attr('class');classes && $.each(classes.split(' '), function(){if (this in $.validator.classRuleSettings){$.extend(rules, $.validator.classRuleSettings[this]);}});return rules;},attributeRules: function(element){var rules = {};var $element = $(element);for (method in $.validator.methods){var value = $element.attr(method);if (value){rules[method] = value;}}if (rules.maxlength && /-1|2147483647|524288/.test(rules.maxlength)){delete rules.maxlength;}return rules;},metadataRules: function(element){if (!$.metadata)return {};var meta = $.data(element.form, 'validator').settings.meta;return meta ?$(element).metadata()[meta] :$(element).metadata();},staticRules: function(element){var rules = {};var validator = $.data(element.form, 'validator');if (validator.settings.rules){rules = $.validator.normalizeRule(validator.settings.rules[element.name])|| {};}return rules;},normalizeRules: function(rules, element){$.each(rules, function(prop, val){if (val === false){delete rules[prop];return;}if (val.param || val.depends){var keepRule = true;switch (typeof val.depends){case "string":keepRule = !!$(val.depends, element.form).length;break;case "function":keepRule = val.depends.call(element, element);break;}if (keepRule){rules[prop] = val.param !== undefined ? val.param : true;} else {delete rules[prop];}}});$.each(rules, function(rule, parameter){rules[rule] = $.isFunction(parameter)? parameter(element): parameter;});$.each(['minlength', 'maxlength', 'min', 'max'], function(){if (rules[this]){rules[this] = Number(rules[this]);}});$.each(['rangelength', 'range'], function(){if (rules[this]){rules[this] = [Number(rules[this][0]), Number(rules[this][1])];}});if ($.validator.autoCreateRanges){if (rules.min && rules.max){rules.range = [rules.min, rules.max];delete rules.min;delete rules.max;}if (rules.minlength && rules.maxlength){rules.rangelength = [rules.minlength, rules.maxlength];delete rules.minlength;delete rules.maxlength;}}if (rules.messages){delete rules.messages}return rules;},normalizeRule: function(data){if( typeof data == "string"){var transformed = {};$.each(data.split(/\s/), function(){transformed[this] = true;});data = transformed;}return data;},addMethod: function(name, method, message){$.validator.methods[name] = method;$.validator.messages[name] = message || $.validator.messages[name];if (method.length < 3){$.validator.addClassRules(name, $.validator.normalizeRule(name));}},methods: {required: function(value, element, param){if ( !this.depend(param, element))return "dependency-mismatch";switch( element.nodeName.toLowerCase()){case 'select':var options = $("option:selected", element);return options.length > 0 && ( element.type == "select-multiple" || ($.browser.msie && !(options[0].attributes['value'].specified)? options[0].text : options[0].value).length > 0);case 'input':if ( this.checkable(element))return this.getLength(value, element)> 0;default:return $.trim(value).length > 0;}},remote: function(value, element, param){if ( this.optional(element))return "dependency-mismatch";var previous = this.previousValue(element);if (!this.settings.messages[element.name])this.settings.messages[element.name] = {};this.settings.messages[element.name].remote = typeof previous.message == "function" ? previous.message(value): previous.message;param = typeof param == "string" && {url:param} || param; if ( previous.old !== value){previous.old = value;var validator = this;this.startRequest(element);var data = {};data[element.name] = value;$.ajax($.extend(true, {url: param,mode: "abort",port: "validate" + element.name,dataType: "json",data: data,success: function(response){var valid = response === true;if ( valid){var submitted = validator.formSubmitted;validator.prepareElement(element);validator.formSubmitted = submitted;validator.successList.push(element);validator.showErrors();} else {var errors = {};errors[element.name] = previous.message = response || validator.defaultMessage( element, "remote");validator.showErrors(errors);}previous.valid = valid;validator.stopRequest(element, valid);}}, param));return "pending";} else if( this.pending[element.name]){return "pending";}return previous.valid;},minlength: function(value, element, param){return this.optional(element)|| this.getLength($.trim(value), element)>= param;},maxlength: function(value, element, param){return this.optional(element)|| this.getLength($.trim(value), element)<= param;},rangelength: function(value, element, param){var length = this.getLength($.trim(value), element);return this.optional(element)|| ( length >= param[0] && length <= param[1]);},min: function( value, element, param){return this.optional(element)|| value >= param;},max: function( value, element, param){return this.optional(element)|| value <= param;},range: function( value, element, param){return this.optional(element)|| ( value >= param[0] && value <= param[1]);},email: function(value, element){return this.optional(element)|| /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i.test(value);},url: function(value, element){return this.optional(element)|| /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(value);},date: function(value, element){return this.optional(element)|| !/Invalid|NaN/.test(new Date(value));},dateISO: function(value, element){return this.optional(element)|| /^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(value);},dateDE: function(value, element){return this.optional(element)|| /^\d\d?\.\d\d?\.\d\d\d?\d?$/.test(value);},number: function(value, element){return this.optional(element)|| /^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$/.test(value);},numberDE: function(value, element){return this.optional(element)|| /^-?(?:\d+|\d{1,3}(?:\.\d{3})+)(?:,\d+)?$/.test(value);},digits: function(value, element){return this.optional(element)|| /^\d+$/.test(value);},creditcard: function(value, element){if ( this.optional(element))return "dependency-mismatch";if (/[^0-9-]+/.test(value))return false;var nCheck = 0,nDigit = 0,bEven = false;value = value.replace(/\D/g, "");for (n = value.length - 1; n >= 0; n--){var cDigit = value.charAt(n);var nDigit = parseInt(cDigit, 10);if (bEven){if ((nDigit *= 2)> 9)nDigit -= 9;}nCheck += nDigit;bEven = !bEven;}return (nCheck % 10)== 0;},accept: function(value, element, param){param = typeof param == "string" ? param.replace(/,/g, '|'): "png|jpe?g|gif";return this.optional(element)|| value.match(new RegExp(".(" + param + ")$", "i")); },equalTo: function(value, element, param){return value == $(param).val();}}});$.format = $.validator.format;})(jQuery);;(function($){var ajax = $.ajax;var pendingRequests = {};$.ajax = function(settings){settings = $.extend(settings, $.extend({}, $.ajaxSettings, settings));var port = settings.port;if (settings.mode == "abort"){if ( pendingRequests[port]){pendingRequests[port].abort();}return (pendingRequests[port] = ajax.apply(this, arguments));}return ajax.apply(this, arguments);};})(jQuery);;(function($){$.each({focus: 'focusin',blur: 'focusout'}, function( original, fix){$.event.special[fix] = {setup:function(){if ( $.browser.msie)return false;this.addEventListener( original, $.event.special[fix].handler, true);},teardown:function(){if ( $.browser.msie)return false;this.removeEventListener( original,$.event.special[fix].handler, true);},handler: function(e){arguments[0] = $.event.fix(e);arguments[0].type = fix;return $.event.handle.apply(this, arguments);}};});$.extend($.fn, {delegate: function(type, delegate, handler){return this.bind(type, function(event){var target = $(event.target);if (target.is(delegate)){return handler.apply(target, arguments);}});},triggerEvent: function(type, target){return this.triggerHandler(type, [$.event.fix({ type: type, target: target })]);}})})(jQuery);